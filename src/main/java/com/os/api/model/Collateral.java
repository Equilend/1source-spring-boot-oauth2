/*
 * 1Source Ledger API
 * 1Source Ledger API provides client access to the 1Source Ledger. You can find out more about 1Source at [https://equilend.com](https://equilend.com).  This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.  API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way. 
 *
 * OpenAPI spec version: 1.0.4
 * Contact: 1source_help@equilend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.os.api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Collateral
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-12-07T14:42:49.871457665Z[GMT]")

public class Collateral {
  @SerializedName("contractPrice")
  private Double contractPrice = null;

  @SerializedName("contractValue")
  private Double contractValue = null;

  @SerializedName("collateralValue")
  private Double collateralValue = null;

  @SerializedName("currency")
  private CurrencyCd currency = null;

  @SerializedName("type")
  private CollateralType type = null;

  @SerializedName("descriptionCd")
  private CollateralDescription descriptionCd = null;

  @SerializedName("margin")
  private Integer margin = null;

  @SerializedName("roundingRule")
  private Double roundingRule = null;

  @SerializedName("roundingMode")
  private RoundingMode roundingMode = null;

  public Collateral contractPrice(Double contractPrice) {
    this.contractPrice = contractPrice;
    return this;
  }

   /**
   * Get contractPrice
   * @return contractPrice
  **/
  @Schema(description = "")
  public Double getContractPrice() {
    return contractPrice;
  }

  public void setContractPrice(Double contractPrice) {
    this.contractPrice = contractPrice;
  }

  public Collateral contractValue(Double contractValue) {
    this.contractValue = contractValue;
    return this;
  }

   /**
   * Get contractValue
   * @return contractValue
  **/
  @Schema(description = "")
  public Double getContractValue() {
    return contractValue;
  }

  public void setContractValue(Double contractValue) {
    this.contractValue = contractValue;
  }

  public Collateral collateralValue(Double collateralValue) {
    this.collateralValue = collateralValue;
    return this;
  }

   /**
   * Get collateralValue
   * @return collateralValue
  **/
  @Schema(required = true, description = "")
  public Double getCollateralValue() {
    return collateralValue;
  }

  public void setCollateralValue(Double collateralValue) {
    this.collateralValue = collateralValue;
  }

  public Collateral currency(CurrencyCd currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(required = true, description = "")
  public CurrencyCd getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyCd currency) {
    this.currency = currency;
  }

  public Collateral type(CollateralType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public CollateralType getType() {
    return type;
  }

  public void setType(CollateralType type) {
    this.type = type;
  }

  public Collateral descriptionCd(CollateralDescription descriptionCd) {
    this.descriptionCd = descriptionCd;
    return this;
  }

   /**
   * Get descriptionCd
   * @return descriptionCd
  **/
  @Schema(description = "")
  public CollateralDescription getDescriptionCd() {
    return descriptionCd;
  }

  public void setDescriptionCd(CollateralDescription descriptionCd) {
    this.descriptionCd = descriptionCd;
  }

  public Collateral margin(Integer margin) {
    this.margin = margin;
    return this;
  }

   /**
   * Get margin
   * @return margin
  **/
  @Schema(description = "")
  public Integer getMargin() {
    return margin;
  }

  public void setMargin(Integer margin) {
    this.margin = margin;
  }

  public Collateral roundingRule(Double roundingRule) {
    this.roundingRule = roundingRule;
    return this;
  }

   /**
   * Get roundingRule
   * @return roundingRule
  **/
  @Schema(description = "")
  public Double getRoundingRule() {
    return roundingRule;
  }

  public void setRoundingRule(Double roundingRule) {
    this.roundingRule = roundingRule;
  }

  public Collateral roundingMode(RoundingMode roundingMode) {
    this.roundingMode = roundingMode;
    return this;
  }

   /**
   * Get roundingMode
   * @return roundingMode
  **/
  @Schema(description = "")
  public RoundingMode getRoundingMode() {
    return roundingMode;
  }

  public void setRoundingMode(RoundingMode roundingMode) {
    this.roundingMode = roundingMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Collateral collateral = (Collateral) o;
    return Objects.equals(this.contractPrice, collateral.contractPrice) &&
        Objects.equals(this.contractValue, collateral.contractValue) &&
        Objects.equals(this.collateralValue, collateral.collateralValue) &&
        Objects.equals(this.currency, collateral.currency) &&
        Objects.equals(this.type, collateral.type) &&
        Objects.equals(this.descriptionCd, collateral.descriptionCd) &&
        Objects.equals(this.margin, collateral.margin) &&
        Objects.equals(this.roundingRule, collateral.roundingRule) &&
        Objects.equals(this.roundingMode, collateral.roundingMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contractPrice, contractValue, collateralValue, currency, type, descriptionCd, margin, roundingRule, roundingMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Collateral {\n");
    
    sb.append("    contractPrice: ").append(toIndentedString(contractPrice)).append("\n");
    sb.append("    contractValue: ").append(toIndentedString(contractValue)).append("\n");
    sb.append("    collateralValue: ").append(toIndentedString(collateralValue)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    descriptionCd: ").append(toIndentedString(descriptionCd)).append("\n");
    sb.append("    margin: ").append(toIndentedString(margin)).append("\n");
    sb.append("    roundingRule: ").append(toIndentedString(roundingRule)).append("\n");
    sb.append("    roundingMode: ").append(toIndentedString(roundingMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
